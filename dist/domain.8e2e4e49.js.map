{"version":3,"sources":["config.js","../node_modules/fast-deep-equal/index.js","../src/index.ts","domain.js"],"names":["config","MY_KEY","googleApi","isEqual","submitButton","document","querySelector","clearButton","display","input","mykey","map","loader","Loader","apiKey","version","load","then","google","maps","Map","getElementById","center","lat","lng","zoom","domainData","data","settings","newData","$","ajax","done","response","html","markUp","domain","available","created_at","expires_at","registrar","clear","innerHTML","value","console","log","addEventListener","e","preventDefault","once"],"mappings":"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","file":"domain.8e2e4e49.js","sourceRoot":"..","sourcesContent":["export var config = {\n    MY_KEY : '15f45eafc4mshb706cfc1228c737p1480d2jsn9e9eeac4290e',\n \n  }\n export const googleApi = 'AIzaSyAT1fpWe017qA71w-wOIazxSyRMXI3c7dc'","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport isEqual from \"fast-deep-equal\";\n\n/**\n * @ignore\n */\ndeclare global {\n  interface Window {\n    __googleMapsCallback: (e: Event) => void;\n  }\n}\n\nexport const DEFAULT_ID = \"__googleMapsScriptId\";\n\ntype Libraries = (\n  | \"drawing\"\n  | \"geometry\"\n  | \"localContext\"\n  | \"places\"\n  | \"visualization\"\n)[];\n\n/**\n * The Google Maps JavaScript API\n * [documentation](https://developers.google.com/maps/documentation/javascript/tutorial)\n * is the authoritative source for [[LoaderOptions]].\n/**\n * Loader options\n */\nexport interface LoaderOptions {\n  /**\n   * See https://developers.google.com/maps/documentation/javascript/get-api-key.\n   */\n  apiKey: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview.\n   */\n  channel?: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview, use `apiKey` instead.\n   */\n  client?: string;\n  /**\n   * In your application you can specify release channels or version numbers:\n   *\n   * The weekly version is specified with `version=weekly`. This version is\n   * updated once per week, and is the most current.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly'});\n   * ```\n   *\n   * The quarterly version is specified with `version=quarterly`. This version\n   * is updated once per quarter, and is the most predictable.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'quarterly'});\n   * ```\n   *\n   * The version number is specified with `version=n.nn`. You can choose\n   * `version=3.40`, `version=3.39`, or `version=3.38`. Version numbers are\n   * updated once per quarter.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: '3.40'});\n   * ```\n   *\n   * If you do not explicitly specify a version, you will receive the\n   * weekly version by default.\n   */\n  version?: string;\n  /**\n   * The id of the script tag. Before adding a new script, the Loader will check for an existing one.\n   */\n  id?: string;\n  /**\n   * When loading the Maps JavaScript API via the URL you may optionally load\n   * additional libraries through use of the libraries URL parameter. Libraries\n   * are modules of code that provide additional functionality to the main Maps\n   * JavaScript API but are not loaded unless you specifically request them.\n   *\n   * ```\n   * const loader = Loader({\n   *  apiKey,\n   *  libraries: ['drawing', 'geometry', 'places', 'visualization'],\n   * });\n   * ```\n   *\n   * Set the [list of libraries](https://developers.google.com/maps/documentation/javascript/libraries) for more options.\n   */\n  libraries?: Libraries;\n  /**\n   * By default, the Maps JavaScript API uses the user's preferred language\n   * setting as specified in the browser, when displaying textual information\n   * such as the names for controls, copyright notices, driving directions and\n   * labels on maps. In most cases, it's preferable to respect the browser\n   * setting. However, if you want the Maps JavaScript API to ignore the\n   * browser's language setting, you can force it to display information in a\n   * particular language when loading the Maps JavaScript API code.\n   *\n   * For example, the following example localizes the language to Japan:\n   *\n   * ```\n   * const loader = Loader({apiKey, language: 'ja', region: 'JP'});\n   * ```\n   *\n   * See the [list of supported\n   * languages](https://developers.google.com/maps/faq#languagesupport). Note\n   * that new languages are added often, so this list may not be exhaustive.\n   *\n   */\n  language?: string;\n  /**\n   * When you load the Maps JavaScript API from maps.googleapis.com it applies a\n   * default bias for application behavior towards the United States. If you\n   * want to alter your application to serve different map tiles or bias the\n   * application (such as biasing geocoding results towards the region), you can\n   * override this default behavior by adding a region parameter when loading\n   * the Maps JavaScript API code.\n   *\n   * The region parameter accepts Unicode region subtag identifiers which\n   * (generally) have a one-to-one mapping to country code Top-Level Domains\n   * (ccTLDs). Most Unicode region identifiers are identical to ISO 3166-1\n   * codes, with some notable exceptions. For example, Great Britain's ccTLD is\n   * \"uk\" (corresponding to the domain .co.uk) while its region identifier is\n   * \"GB.\"\n   *\n   * For example, the following example localizes the map to the United Kingdom:\n   *\n   * ```\n   * const loader = Loader({apiKey, region: 'GB'});\n   * ```\n   */\n  region?: string;\n  /**\n   * (Beta) You can add multiple Map IDs to your map using the map_ids paramenter in\n   * your bootstrap request.\n   */\n  mapIds?: string[];\n  /**\n   * Use a custom url and path to load the Google Maps API script.\n   */\n  url?: string;\n  /**\n   * Use a cryptographic nonce attribute.\n   */\n  nonce?: string;\n  /**\n   * The number of script load retries.\n   */\n  retries?: number;\n}\n\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then(() => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nexport class Loader {\n  /**\n   * See [[LoaderOptions.version]]\n   */\n  version: string;\n  /**\n   * See [[LoaderOptions.apiKey]]\n   */\n  apiKey: string;\n  /**\n   * See [[LoaderOptions.channel]]\n   */\n  channel: string;\n  /**\n   * See [[LoaderOptions.client]]\n   */\n  client: string;\n  /**\n   * See [[LoaderOptions.id]]\n   */\n  id: string;\n  /**\n   * See [[LoaderOptions.libraries]]\n   */\n  libraries: Libraries;\n  /**\n   * See [[LoaderOptions.language]]\n   */\n  language: string;\n\n  /**\n   * See [[LoaderOptions.region]]\n   */\n  region: string;\n\n  /**\n   * See [[LoaderOptions.mapIds]]\n   */\n  mapIds: string[];\n\n  /**\n   * See [[LoaderOptions.nonce]]\n   */\n  nonce: string | null;\n\n  /**\n   * See [[LoaderOptions.retries]]\n   */\n  retries: number;\n\n  /**\n   * See [[LoaderOptions.url]]\n   */\n  url: string;\n\n  private CALLBACK = \"__googleMapsCallback\";\n  private callbacks: ((e: Event) => void)[] = [];\n  private done = false;\n  private loading = false;\n  private onerrorEvent: Event;\n  private static instance: Loader;\n  private errors: ErrorEvent[] = [];\n\n  /**\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n   * using this library, instead the defaults are set by the Google Maps\n   * JavaScript API server.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n   * ```\n   */\n  constructor({\n    apiKey,\n    channel,\n    client,\n    id = DEFAULT_ID,\n    libraries = [],\n    language,\n    region,\n    version,\n    mapIds,\n    nonce,\n    retries = 3,\n    url = \"https://maps.googleapis.com/maps/api/js\",\n  }: LoaderOptions) {\n    this.version = version;\n    this.apiKey = apiKey;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n    this.libraries = libraries;\n    this.language = language;\n    this.region = region;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.retries = retries;\n    this.url = url;\n\n    if (Loader.instance) {\n      if (!isEqual(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        );\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  get options(): LoaderOptions {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url,\n    };\n  }\n\n  /**\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n   *\n   * @ignore\n   */\n  createUrl(): string {\n    let url = this.url;\n\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   */\n  load(): Promise<void> {\n    return this.loadPromise();\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   *\n   * @ignore\n   */\n  loadPromise(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err: Event) => {\n        if (!err) {\n          resolve();\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script with a callback.\n   */\n  loadCallback(fn: (e: Event) => void): void {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n\n  /**\n   * Set the script on document.\n   */\n  private setScript(): void {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n\n  deleteScript(): void {\n    const script = document.getElementById(this.id);\n    if (script) {\n      script.remove();\n    }\n  }\n\n  private resetIfRetryingFailed(): void {\n    const possibleAttempts = this.retries + 1;\n    if (this.done && !this.loading && this.errors.length >= possibleAttempts) {\n      this.deleteScript();\n      this.done = false;\n      this.loading = false;\n      this.errors = [];\n    }\n  }\n\n  private loadErrorCallback(e: ErrorEvent): void {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length;\n\n      console.log(\n        `Failed to load Google Maps script, retrying in ${delay} ms.`\n      );\n\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  private setCallback(): void {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  private callback(): void {\n    this.done = true;\n    this.loading = false;\n\n    this.callbacks.forEach((cb) => {\n      cb(this.onerrorEvent);\n    });\n\n    this.callbacks = [];\n  }\n\n  private execute(): void {\n    if (window.google && window.google.maps && window.google.maps.version) {\n      console.warn(\n        \"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n          \"This may result in undesirable behavior as options and script parameters may not match.\"\n      );\n      this.callback();\n    }\n\n    this.resetIfRetryingFailed();\n    if (this.done) {\n      this.callback();\n    } else {\n      if (this.loading) {\n        // do nothing but wait\n      } else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n}\n","import {config, googleApi} from './config.js'\nimport { Loader } from \"@googlemaps/js-api-loader\"\n//select all elements needed\nconst submitButton = document.querySelector('#sub');\nconst clearButton = document.querySelector('#clear');\nconst display = document.querySelector('#displayResults');\nconst input = document.querySelector('#inputId');\nconst mykey = config.MY_KEY;\nlet map;\n\n\nconst loader = new Loader({\n    apiKey: googleApi,\n    version: \"weekly\",\n   \n  });\n  loader.load().then(() => {\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: -34.397, lng: 150.644 },\n      zoom: 8,\n    });\n  });\n\n//grab the data you need to display results\nfunction domainData(data){\n    const settings = {\n        \"async\": true,\n        \"crossDomain\": true,\n        \"url\": \"https://domain-checker7.p.rapidapi.com/api/v2.0/domain\",\n        \"method\": \"POST\",\n        \"headers\": {\n            \"content-type\": \"application/x-www-form-urlencoded\",\n            \"x-rapidapi-key\": `${mykey}`,\n            \"x-rapidapi-host\": \"domain-checker7.p.rapidapi.com\"\n        },\n        \"data\": {\n            \"domain\": `${data}`\n        }\n    };\n    \n   const newData =  $.ajax(settings).done(function (response) {\n        return response\n    });\n    return newData\n}\ndomainData('google.com')\n\n//display those results onto the page\nfunction html(data){\n    const markUp = `\n   <h3>Domain: ${data.domain}</h3>\n   <h3>Available: ${data.available}</h3>\n   <h3>Created: ${data.created_at}</h3>\n   <h3>Expires: ${data.expires_at}</h3>\n   <h3>Registrar: ${data.registrar}</h3>\n    `\n    return markUp;\n}\nfunction clear(){\n    display.innerHTML = '';\n    input.value = '';\n    console.log('data cleared');\n}\n//when the clear button is clicked clear the input\n//when submit button is clicked get the value of the users input and attach to the query\nsubmitButton.addEventListener('click', async function(e){\n    e.preventDefault();\n    const value = input.value;\n    const data = await domainData(value)\n    console.log(data)\n    display.innerHTML = html(data)\n},{\n    once : false\n  })\n\n  clearButton.addEventListener('click', clear,{\n      once: false\n  });"]}